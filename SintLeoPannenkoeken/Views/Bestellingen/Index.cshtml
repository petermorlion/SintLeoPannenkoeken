@using SintLeoPannenkoeken.ViewModels.Bestellingen;
@model SintLeoPannenkoeken.ViewModels.Bestellingen.IndexViewModel
@{
    ViewData["Title"] = "Bestellingen";
}

<div id="bestellingen" class="container-fluid" data-scoutsjaar="@Model.Scoutsjaar.Begin">
    <h1 class="display-4">
        @ViewData["Title"] 
        @await Component.InvokeAsync("Scoutsjaar", new { selectedScoutsjaar = Model.Scoutsjaar.Begin })
    </h1>
    <div class="row mt-4 mb-4">
        <div class="col-9">
            @await Component.InvokeAsync("Bestelling", new BestellingFormViewModel {
                IndexViewModel = Model,
                FormId = "createBestellingForm"
            })
        </div>
        <div class="col-3 bestellingen-summary">
            <h2>Pakjes</h2>
            <span id="aantalPakjes"></span>
            <h2>Pannenkoeken</h2>
            <span id="aantalPannenkoeken"></span>
        </div>
    </div>
    <div class="modal fade" id="editBestellingModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Bestelling bewerken</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @await Component.InvokeAsync("Bestelling", new BestellingFormViewModel {
                        IndexViewModel = Model,
                        FormId = "updateBestellingForm"
                    })
                </div>
            </div>
        </div>
    </div>
    <table id="bestellingenTable" class="table table-striped">
        <thead>
            <tr>
                <th>Nr</th>
                <th>Naam koper</th>
                <th>Telefoon</th>
                <th>Code</th>
                <th>Adres</th>
                <th>Aantal pakken</th>
                <th>Opmerkingen</th>
                <th>Betaald</th>
                <th>Lid</th>
                <th>Tak</th>
                <th></th>
            </tr>
        </thead>
    </table>
</div>

@section Scripts {
    <script>
        var basisId = '120';

        async function reloadBestellingen() {
            var scoutsjaar = $('#bestellingen').data('scoutsjaar');
            var response = await fetch(`/api/bestellingen/${scoutsjaar}`);
            if (!response.ok) {
                var errorMessage = await (response.text());
                alert(errorMessage);
            }

            var json = await response.json();
            var bestellingen = json.bestellingen;

            $('#aantalPakjes').text(json.aantalPakjes);
            $('#aantalPannenkoeken').text(json.aantalPannenkoeken);

            $('#bestellingenTable').DataTable({
                destroy: true,
                data: bestellingen,
                order: [[0, 'desc']],
                pageLength: 250,
                lengthMenu: [50, 10, 250, 500],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.1/i18n/nl-NL.json'
                },
                columns: [
                    { data: 'bestellingNummer' },
                    { data: 'naam' },
                    { data: 'telefoon' },
                    { data: 'code', width: '80px' },
                    {
                        data: function(row, type, val, meta) {
                            if (row.bus) {
                                return `${row.straat} ${row.nummer}/${row.bus}`;
                            } else {
                                return `${row.straat} ${row.nummer}`
                            }
                        }
                    },
                    { data: 'aantalPakken' },
                    { data: 'opmerkingen' },
                    { 
                        data: function(row, type, val, meta) {
                            if (row.betaald) {
                                return '<i class="bi-check-lg"></i>';
                            }
                            
                            return '';
                        }
                    },
                    { 
                        data: function(row, type, val, meta) {
                            return `${row.lid.achternaam} ${row.lid.voornaam}`;
                        } 
                    },
                    { data: 'tak.afkorting' },
                    {
                        data: function(row, type, val, meta) {
                            return `
                                <a href='#' onclick="editBestelling(${row.id})" title='Bewerken'><i class="bi bi-pencil-fill"></i></a>
                                <a href='#' onclick="deleteBestelling(${row.id})" title='Verwijderen'><i class="text-danger bi bi-x-circle-fill"></i></a>
                                `;
                        }
                    }
                ]
            });
        }

        async function createBestelling() {
            var scoutsjaar = $('#bestellingen').data('scoutsjaar');
            var data = {
                naam: $('#createBestellingForm #naam').val(),
                telefoon: $('#createBestellingForm #telefoon').val(),
                aantalPakken: $('#createBestellingForm #aantalPakken').val(),
                betaald: $('#createBestellingForm #betaald').is(':checked'),
                opmerkingen: $('#createBestellingForm #opmerkingen').val(),
                lidId: $('#createBestellingForm #lid').val(),
                straatId: $('#createBestellingForm #straat').val(),
                nummer: $('#createBestellingForm #nummer').val(),
                bus: $('#createBestellingForm #bus').val()
            };

            var response = await fetch(`/api/bestellingen/${scoutsjaar}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (!response.ok) {
                var errorMessage = await(response.text());
                alert(errorMessage);
            }

            var bestelling = await response.json();

            await reloadBestellingen();
            clearForms();
            $('#createBestellingForm #lid').val(bestelling.lid.id)
            setFocus();
        }

        async function updateBestelling() {
            var scoutsjaar = $('#bestellingen').data('scoutsjaar');
            var data = {
                naam: $('#updateBestellingForm #naam').val(),
                telefoon: $('#updateBestellingForm #telefoon').val(),
                aantalPakken: $('#updateBestellingForm #aantalPakken').val(),
                betaald: $('#updateBestellingForm #betaald').is(':checked'),
                opmerkingen: $('#updateBestellingForm #opmerkingen').val(),
                lidId: $('#updateBestellingForm #lid').val(),
                straatId: $('#updateBestellingForm #straat').val(),
                nummer: $('#updateBestellingForm #nummer').val(),
                bus: $('#updateBestellingForm #bus').val()
            };

            var bestellingId = $('#updateBestellingForm #bestellingId').val();

            var response = await fetch(`/api/bestellingen/${scoutsjaar}/${bestellingId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (!response.ok) {
                var errorMessage = await(response.text());
                alert(errorMessage);
            }

            await reloadBestellingen();
            clearForms();
            setFocus();
        }

        async function deleteBestelling(bestellingId) {
            var scoutsjaar = $('#bestellingen').data('scoutsjaar');
            var response = await fetch(`/api/bestellingen/${scoutsjaar}/${bestellingId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                var errorMessage = await response.text();
                alert(errorMessage);
            }

            await reloadBestellingen();
        }

        async function editBestelling(bestellingId) {
            var scoutsjaar = $('#bestellingen').data('scoutsjaar');
            $('#editBestellingModal #bestellingId').val(bestellingId);

            var response = await fetch(`/api/bestellingen/${scoutsjaar}/${bestellingId}`);
            if (!response.ok) {
                var errorMessage = await (response.text());
                alert(errorMessage);
            }

            var bestelling = await response.json();
            
            $('#updateBestellingForm #naam').val(bestelling.naam);
            $('#updateBestellingForm #telefoon').val(bestelling.telefoon);
            $('#updateBestellingForm #aantalPakken').val(bestelling.aantalPakken);
            $('#updateBestellingForm #betaald').prop('checked', bestelling.betaald);
            $('#updateBestellingForm #opmerkingen').val(bestelling.opmerkingen);
            $('#updateBestellingForm #lid').val(bestelling.lid.id);
            $('#updateBestellingForm #straat').val(bestelling.straatId);
            $('#updateBestellingForm #nummer').val(bestelling.nummer);
            $('#updateBestellingForm #bus').val(bestelling.bus);

            $('#editBestellingModal').modal('show');
        }

        function setFocus() {
            $('#createBestellingForm #naam').focus();
        }

        function clearForms() {
            $('#createBestellingForm')[0].reset();
            $('#updateBestellingForm')[0].reset();
        }

        function disableAdres(formId) {
            $(formId + ' #straat').prop('disabled', true);
            $(formId + ' #nummer').prop('disabled', true);
            $(formId + ' #bus').prop('disabled', true);
        }

        function enableAdres(formId) {
            $(formId + ' #straat').prop('disabled', false);
            $(formId + ' #nummer').prop('disabled', false);
            $(formId + ' #bus').prop('disabled', false);
        }

        $(async function () {
            $('#createBestellingForm button.btn-primary').click(async function(event) {
                event.preventDefault();
                await createBestelling();
                enableAdres('#createBestellingForm');
            });

            $('#createBestellingForm button.btn-secondary').click(async function (event) {
                event.preventDefault();
                clearForms();
                enableAdres('#createBestellingForm');
                setFocus();
            });

            $('#editBestellingModal button.btn-primary').click(async function(event) {
                event.preventDefault();
                await updateBestelling();
                $('#editBestellingModal').modal('hide');
                enableAdres('#updateBestellingForm');
            });

            $('#editBestellingModal button.btn-secondary').click(async function (event) {
                event.preventDefault();
                clearForms();
                enableAdres('#updateBestellingForm');
                $('#editBestellingModal').modal('hide');
            });

            $('.zelf-afhalen-input').click(async function () {
                var checked = $(this).is(':checked');
                var formId = '#' + $(this).parents('form').eq(0).attr('id');
                if (checked) {
                    disableAdres(formId);
                    $(formId + ' #nummer').val('');
                    $(formId + ' #straat').val(basisId);
                } else {
                    enableAdres(formId);
                }
            });

            $('.straat-input').change(function() {
                var formId = '#' + $(this).parents('form').eq(0).attr('id');
                if ($(this).val() === basisId) {
                    disableAdres(formId);
                    $(formId + ' #nummer').val('');
                    $(formId + ' #zelfAfhalen').prop('checked', true);
                }

                var selectedOptionCode = $(formId + ' #straat option:selected').data('code');
                $(formId + ' #code').val(selectedOptionCode);
            });

            await reloadBestellingen();

            setFocus();
        });
    </script>
}
