@model SintLeoPannenkoeken.ViewModels.Rapporten.IngaveTotalenViewModel;
@{
    ViewData["Title"] = "Totaal Ingegeven";
}

<div id="rapporten" class="container-fluid">
    <h1 class="display-4">
        @ViewData["Title"]
        @await Component.InvokeAsync("Scoutsjaar", new { selectedScoutsjaar = Model.ScoutsjaarBegin })
    </h1>
    
    <table id="ingaveTotalenTable" class="table table-hover">
        <thead>
            <tr>
                <th>Datum</th>
                @foreach (var tak in Model.Takken)
                {
                    <th>@tak</th>
                }
                <th>Totaal</th>
                <th>Oplopend totaal</th>
            </tr>
        </thead>
        <tbody>
            @{
                var oplopendTotaal = 0;
            }
            @foreach (var row in Model.IngaveTotalen)
            {
                oplopendTotaal += row.AantalPerTak.Sum(x => x.Value);
                <tr>
                    <td>@row.IngaveDatum.ToString("dd/MM/yy")</td>
                    @foreach (var tak in Model.Takken)
                    {
                        <td>
                            @if (row.AantalPerTak.ContainsKey(tak))
                            {
                                @row.AantalPerTak[tak]
                            } else
                            {
                                <span>0</span>
                            }
                        </td>
                    }
                    <td>@row.AantalPerTak.Sum(x => x.Value)</td>
                    <td>@oplopendTotaal</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@* @section Scripts {
    <script>
        async function initTable() {
            const json = @Json.Serialize(Model.LidVerkoopViewModels);
            const table = $('#ingaveTotalenTable').DataTable({
                destroy: true,
                data: json,
                dom: 'frtip',
                order: [[2, 'desc']],
                pageLength: 1000,
                lengthMenu: [250, 500, 1000],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.1/i18n/nl-NL.json'
                },
                columns: [
                    { data: 'naam' },
                    { data: 'takNaam' },
                    { data: 'aantalPakkenVerkocht' }
                ],
                initComplete: function(settings, json) {
                    const select = $('#takFilter')
                        .on('change', function () {
                            var val = $(this).val();
                            if (val === 'all') {
                                val = '';
                            }

                            table.column(1)
                                .search(val)
                                .draw();
                        });

                    table
                        .column(1)
                        .cache('search')
                        .sort()
                        .unique()
                        .each(function (o) {
                            select.append($('<option value="' + o + '">' + o + '</option>'));
                        });
                }
            });
        }

        $(async function () {
            await initTable();
        });
    </script>
} *@