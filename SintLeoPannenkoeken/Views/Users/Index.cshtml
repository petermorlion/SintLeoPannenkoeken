@{
    ViewData["Title"] = "Gebruikers";
}

<div id="leden" class="container-fluid">
    <h1 class="display-4">@ViewData["Title"]</h1>
    <form id="userForm">
        <div class="row mt-4 mb-4">
            <div class="col-6">
                <label for="email" class="form-label">Email</label>
                <input type="text" class="form-control" placeholder="Email" aria-label="Email" name="email" id="email">
            </div>
        </div>
        <div class="row mt-4 mb-4">
            <div class="col-12">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="admin" name="role" value="admin" />
                    <label for="admin" class="form-check-label">Admin</label>
                </div>
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="financieploeg" name="role" value="financieploeg" />
                    <label for="financieploeg" class="form-check-label">Financieploeg</label>
                </div>
            </div>
            <div class="row">
                <div class="col-12 mb-4">
                    <button type="submit" class="btn btn-primary">Toevoegen</button>
                    <button type="reset" class="btn btn-secondary">Annuleren</button>
                </div>
            </div>
    </form>
    <div id="passwordResetLink">
    </div>
    <table id="usersTable" class="table table-hover">
        <thead>
            <tr>
                <th>Email</th>
                <th>Rollen</th>
                <th></th>
            </tr>
        </thead>
    </table>
</div>

@section Scripts {
    <script>
        async function reloadUsers() {
            var response = await fetch(`/api/users`);
            if (!response.ok) {
                var errorMessage = await(response.text());
                alert(errorMessage);
            }

            var json = await response.json();
            $('#usersTable').DataTable({
                destroy: true,
                data: json,
                pageLength: 250,
                lengthMenu: [50, 10, 250, 500],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.1/i18n/nl-NL.json'
                },
                columns: [
                    { data: 'email' },
                    {
                        data: 'roles',
                        render: function (data, type, row, meta) {
                            return data.sort(function (a, b) {
                                if (a < b) {
                                    return -1;
                                }
                                if (a > b) {
                                    return 1;
                                }

                                return 0;
                            }).join(', ');
                        }
                    },
                    {
                        data: function (row, type, val, meta) {
                            return `
                                <a href='javascript:void(0);' onclick="deleteUser('${row.email}', '${row.id}')" title='Verwijderen'><i class="text-danger bi bi-x-circle-fill"></i></a>
                            `;
                        }
                    }
                ]
            });
        }

        async function submitUser() {
            var data = {
                email: $('#userForm #email').val(),
                roles: $('#userForm input[name="role"]:checked').map(function() {
                    return $(this).val()
                }).get()
            };

            var response = await fetch(`/api/users`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (!response.ok) {
                var errorMessage = await response.text();
                alert(errorMessage);
            } else {
                var body = await response.json();
                $('#passwordResetLink').html(`<p>Klik <a href="${body.passwordResetLink}">hier</a> om je paswoord opnieuw in te stellen.</p>`);
            }

            setFocus();
        }

        async function deleteUser(email, userId) {
            var text = `Ben je zeker dat je deze gebruiker (${email}) wil verwijderen?`;
            if (confirm(text) !== true) {
                return;
            }

            var response = await fetch(`/api/users/${userId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                var errorMessage = await (response.text());
                alert(errorMessage);
            }

            await reloadUsers();
        }

        function setFocus() {
            $('#userForm #email').focus();
        }

        function clearForm() {
            $('#userForm')[0].reset();
        }

        $(async function () {
            $('#userForm button.btn-primary').click(async function(event) {
                event.preventDefault();
                await submitUser();
                await reloadUsers();
                clearForm();
            });

            await reloadUsers();
            setFocus();
        });
    </script>
}
